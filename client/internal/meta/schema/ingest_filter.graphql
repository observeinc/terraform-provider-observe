# defines a filter that is used for dropping data at ingest
# this file is auto-generated by gmodelgen, do not edit
extend type Mutation {
    """
    Enable or disable an ingest filter.
    """
    setIngestFilterEnabled(id: ObjectId!, enabled: Boolean!): IngestFilter
}
extend type Query {
    """
    Validates that the pipeline and dataset id are valid for filtering.
    """
    validateIngestFilterExpression(pipeline: String!, sourceDatasetID: ObjectId!): [TaskResultError!]

    """
    Provides a list of valid datasets to create filters against.
    """
    getIngestFilterableDatasetIds: [ObjectId!]
}

extend type Query {
    ingestFilter(id: ObjectId!): IngestFilter!
    searchIngestFilter(workspaceId: ObjectId, folderId: ObjectId, nameExact: String, nameSubstring: String, sourceDatasetID: ObjectId): IngestFilterSearchResult!
}

extend type Mutation {
    createIngestFilter(workspaceId: ObjectId!, input: IngestFilterInput!): IngestFilter!
    updateIngestFilter(id: ObjectId!, input: IngestFilterInput!): IngestFilter!
    deleteIngestFilter(id: ObjectId!): ResultStatus!
}

type IngestFilter implements WorkspaceObject & AuditedObject & FolderObject @goModel(model: "observe/meta/metatypes.IngestFilter") {
    # payload
    """
    Raw opal that defines the filter predicate.
    """
    pipeline: String!
    """
    Json blob for frontend to store layout information.
    """
    layout: JsonObject
    """
    Enabled indicates if the filter should be applied or not.
    """
    enabled: Boolean!
    """
    The source dataset ID that this filter is applied to.
    """
    sourceDatasetID: ObjectId!
    # not in output: ast: JsonObject!
    """
    The drop rate is a double precision floating point value between 0 and 1 that specifies what percentage of matching
    observations to drop.
    """
    dropRate: Float!
    """
    Error message. Will return errors about incorrect filter definitions.
    """
    errors: [TaskResultError!]
    # WorkspaceObject
    id: ObjectId!
    workspaceId: ObjectId!
    name: String!
    iconUrl: String
    description: String
    managedById: ObjectId
    managedBy: WorkspaceObject @goField(forceResolver: true)

    # FolderObject
    folderId: ObjectId!

    # AuditedObject
    createdBy: UserId!
    createdDate: Time!
    createdByInfo: UserInfo! @goField(forceResolver: true)
    updatedBy: UserId!
    updatedDate: Time!
    updatedByInfo: UserInfo! @goField(forceResolver: true)
}

input IngestFilterInput @goModel(model: "observe/meta/metatypes.IngestFilterInput") {
    # payload
    pipeline: String!
    layout: JsonObject
    enabled: Boolean!
    sourceDatasetID: ObjectId!
    # not in input: ast: JsonObject!
    dropRate: Float!
    # not in input: errors: [TaskResultError!]
    # WorkspaceObject
    name: String!
    iconUrl: String
    description: String
    managedById: ObjectId

    # FolderObject
    folderId: ObjectId
}

type IngestFilterSearchResult @goModel(model: "observe/meta/metatypes.IngestFilterSearchResult") {
    results: [IngestFilter!]!
}

