# A high-level ingest object that identifies a data source and can be associated with multiple destinations.
# this file is auto-generated by gmodelgen, do not edit
extend type Mutation {
    updateIngestTokenAssociation(id: ObjectId!, datastreamIDs: [ObjectId!]): ResultStatus!
}

extend type Query {
    ingestToken(id: ObjectId!): IngestToken!
    searchIngestToken(workspaceId: ObjectId, folderId: ObjectId, nameExact: String, nameSubstring: String): IngestTokenSearchResult!
}

extend type Mutation {
    createIngestToken(workspaceId: ObjectId!, input: IngestTokenInput!): IngestToken!
    updateIngestToken(id: ObjectId!, input: IngestTokenInput!): IngestToken!
    deleteIngestToken(id: ObjectId!): ResultStatus!
}

type IngestToken implements WorkspaceObject & AuditedObject & FolderObject @goModel(model: "observe/meta/metatypes.IngestToken") {
    # payload
    """
    ID of the authtoken associated with this ingest token
    """
    authtokenID: String!
    disabled: Boolean
    """
    Authtoken secret associated with this ingest token, only populated for creates
    """
    secret: String
    # WorkspaceObject
    id: ObjectId!
    workspaceId: ObjectId!
    name: String!
    iconUrl: String
    description: String
    managedById: ObjectId
    managedBy: WorkspaceObject @goField(forceResolver: true)

    # FolderObject
    folderId: ObjectId!

    # AuditedObject
    createdBy: UserId!
    createdDate: Time!
    createdByInfo: UserInfo! @goField(forceResolver: true)
    updatedBy: UserId!
    updatedDate: Time!
    updatedByInfo: UserInfo! @goField(forceResolver: true)
}

input IngestTokenInput @goModel(model: "observe/meta/metatypes.IngestTokenInput") {
    # payload
    # not in input: authtokenID: String!
    disabled: Boolean
    # not in input: secret: String
    # WorkspaceObject
    name: String
    iconUrl: String
    description: String
    managedById: ObjectId

    # FolderObject
    folderId: ObjectId
}

type IngestTokenSearchResult @goModel(model: "observe/meta/metatypes.IngestTokenSearchResult") {
    results: [IngestToken!]!
}

