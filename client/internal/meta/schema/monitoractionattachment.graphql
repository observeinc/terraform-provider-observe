# Support for making connections between monitors and actions
# this file is auto-generated by gmodelgen, do not edit
extend type Query {
    monitorActionAttachment(id: ObjectId!): MonitorActionAttachment!
    searchMonitorActionAttachment(workspaceId: ObjectId, folderId: ObjectId, nameExact: String, nameSubstring: String): MonitorActionAttachmentSearchResult!
}

extend type Mutation {
    createMonitorActionAttachment(input: MonitorActionAttachmentInput!): MonitorActionAttachment!
    updateMonitorActionAttachment(id: ObjectId!, input: MonitorActionAttachmentInput!): MonitorActionAttachment!
    deleteMonitorActionAttachment(id: ObjectId!): ResultStatus!
}

type MonitorActionAttachment implements WorkspaceObject & AuditedObject & FolderObject @goModel(model: "observe/meta/metatypes.MonitorActionAttachment") {
    # payload
    monitorID: ObjectId!
    actionID: ObjectId!
    channelID: ObjectId
    # WorkspaceObject
    id: ObjectId!
    workspaceId: ObjectId!
    name: String!
    iconUrl: String
    description: String
    managedById: ObjectId
    managedBy: WorkspaceObject @goField(forceResolver: true)

    # FolderObject
    folderId: ObjectId!

    # AuditedObject
    createdBy: UserId!
    createdDate: Time!
    createdByInfo: UserInfo! @goField(forceResolver: true)
    updatedBy: UserId!
    updatedDate: Time!
    updatedByInfo: UserInfo! @goField(forceResolver: true)
}

input MonitorActionAttachmentInput @goModel(model: "observe/meta/metatypes.MonitorActionAttachmentInput") {
    # payload
    monitorID: ObjectId!
    actionID: ObjectId!
    channelID: ObjectId
    # WorkspaceObject
    workspaceId: ObjectId!
    name: String
    iconUrl: String
    description: String
    managedById: ObjectId

    # FolderObject
    folderId: ObjectId
}

type MonitorActionAttachmentSearchResult @goModel(model: "observe/meta/metatypes.MonitorActionAttachmentSearchResult") {
    results: [MonitorActionAttachment!]!
}

