fragment RbacStatement on RbacStatement {
	id
        description
        subject {
                userId
                groupId
                all
        }
        object {
                objectId
                folderId
                workspaceId
                type
                name
                owner
                all
        }
        role
        version
}

fragment MutateRbacStatementsResponse on MutateRbacStatementsResponse {
    createdStatements {
        ...RbacStatement
    }
    updatedStatements {
        ...RbacStatement
    }
    deletedStatements
}

mutation createRbacStatement($config: RbacStatementInput!) {
    # @genqlient(flatten: true)
    rbacStatement: createRbacStatement(input: $config) {
        ...RbacStatement
    }
}

query getRbacStatement($id: ORN!) {
	# @genqlient(flatten: true)
	rbacStatement: rbacStatement(id: $id) {
		...RbacStatement
	}
}

mutation updateRbacStatement($id: ORN!, $config: RbacStatementInput!) {
    # @genqlient(flatten: true)
    rbacStatement: updateRbacStatement(id:$id, input: $config) {
        ...RbacStatement
    }
}

mutation deleteRbacStatement($id: ORN!) {
    # @genqlient(flatten: true)
    resultStatus: deleteRbacStatement(id: $id) {
        ...ResultStatus
    }
}

mutation mutateRbacStatements($toCreate: [RbacStatementInput!], $toUpdate:[UpdateRbacStatementInput!], $toDelete: [ORN!]) {
    # @genqlient(flatten: true)
    mutateRbacStatements: mutateRbacStatements(toCreate: $toCreate, toUpdate: $toUpdate, toDelete: $toDelete) {
        ...MutateRbacStatementsResponse
    }
}

query getRbacResourceStatements($ids: [ObjectId!]!) {
    # @genqlient(flatten: true)
    rbacResourceStatements: rbacResourceStatements(ids: $ids) {
        ...RbacStatement
    }
}
