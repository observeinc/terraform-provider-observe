name: sweep

on:
  pull_request:
    paths:
      - .github/workflows/sweep.yml
      - observe/observe_sweeper_test.go
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  workflow_run:
    workflows:
      - test
    
jobs:
  # Check if we should run the main sweep job
  # On workflow_run events, check if the workflow_run failed and if the acceptance job failed
  # On other events, always run the sweep job
  should:
    runs-on: ubuntu-latest
    steps:
      - id: event
        name: 'Check event match (workflow_run, conclusion: failure)'
        if: ${{ github.event.workflow_run.conclusion == 'failure' }}
        run: echo match=true >> "$GITHUB_OUTPUT"
      - id: job
        name: 'Check job match (acceptance)'
        if: ${{ steps.event.outputs.match == 'true' }}
        run: 
          conclusion="$(gh run view ${{ github.event.workflow_run.run_number }} --json jobs | jq -r '.jobs[] | select(.name == "acceptance") | .conclusion')"
          if [ "$conclusion" == "failure" ]; then
            echo match=true >> "$GITHUB_OUTPUT"
          fi
    outputs:
      match: ${{ github.event_name != 'workflow_run' || steps.job.outputs.match == 'true' }}
  sweep:
    needs: should
    if: ${{ needs.should.outputs.match == 'true' }}}
    runs-on: ubuntu-latest
    concurrency:
      group: tests
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - timeout-minutes: 3
        run: make sweep
        env:
          # Environment variables for configuring the provider
          OBSERVE_CUSTOMER: ${{ vars.OBSERVE_CUSTOMER }}
          OBSERVE_DOMAIN: ${{ vars.OBSERVE_DOMAIN }}
          OBSERVE_USER_EMAIL: ${{ vars.OBSERVE_USER_EMAIL }}
          OBSERVE_USER_PASSWORD: ${{ secrets.OBSERVE_USER_PASSWORD }}
          OBSERVE_WORKSPACE: ${{ vars.OBSERVE_WORKSPACE }}
